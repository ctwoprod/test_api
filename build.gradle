repositories {
    jcenter()
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.0'
        classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
    }
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: "io.spring.dependency-management"

dependencies {
    compile 'org.cfg4j:cfg4j-core:4.4.0'
    compile 'org.cfg4j:cfg4j-consul:4.4.0'
    compile 'com.orbitz.consul:consul-client:0.16.3'
    compile 'commons-beanutils:commons-beanutils:1.9.3'

    compile 'com.sparkjava:spark-core:2.6.0'

    compile 'com.google.inject:guice:4.1.0'
    compile 'com.google.inject.extensions:guice-testlib:4.1.0'

    compile 'com.google.guava:guava:20.0'
    compile 'org.apache.commons:commons-lang3:3.6'
    compile 'org.apache.commons:commons-text:1.1'
    compile 'com.fasterxml.jackson.core:jackson-core:2.9.0'
    compile 'org.projectlombok:lombok:1.16.18'

    compile 'org.postgresql:postgresql:42.1.3'
    compile 'com.zaxxer:HikariCP:2.6.2'
    compile 'org.jdbi:jdbi:2.78'
    compile 'org.flywaydb:flyway-core:4.2.0'

    compile 'ch.qos.logback:logback-core:1.2.3'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'io.sentry:sentry-logback:1.5.4'
    compile 'net.logstash.logback:logstash-logback-encoder:4.11'
    
    compile 'com.mashape.unirest:unirest-java:1.4.9'
    compile 'org.apache.httpcomponents:httpclient:4.5.3'
    compile 'org.apache.httpcomponents:httpasyncclient:4.0.2'
    compile 'org.apache.httpcomponents:httpmime:4.3.6'
    compile 'org.json:json:20140107'

    compile 'commons-fileupload:commons-fileupload:1.3.1'
    compile 'commons-io:commons-io:2.6'

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.8.0'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile "com.github.tomakehurst:wiremock:2.8.0"
}

mainClassName = 'org.rf.test.App'
version = '0.0.1-SNAPSHOT'

task migrateDatabase(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.rf.test.helper.DatabaseMigration'
}

task resetDatabase(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.rf.test.helper.DatabaseMigration'
    args = ['reset']
}

task repairDatabase(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.rf.test.helper.DatabaseMigration'
    args = ['repair']
}

shadowJar {
    archiveName = project.name + "-" + version + ".jar"
    exclude "test/"
}

test.dependsOn resetDatabase

